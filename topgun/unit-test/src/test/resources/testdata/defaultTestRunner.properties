# ###########################################################
# This properties file drives the TestRunner class
#
# All test verifications below should be SUCCESSFUL
#
# ###########################################################


# ###########################################################
# Database user, password, url, driver class
# ###########################################################
jdbc.user = topgun
jdbc.password = password
jdbc.url = jdbc:derby:./generated/db/unit-test-DB
jdbc.driverclass = org.apache.derby.jdbc.ClientDriver


# ###########################################################
# STEP 1 : PRE-RUN OS CMD
#
# Runs Operation System commands
#
# ###########################################################
PRE-RUN.os.cmd.enabled = false
PRE-RUN.os.cmd[1] = dir 
PRE-RUN.os.cmd[2] = java -version


# ###########################################################
# STEP 2 : PRE-RUN SQL
#
# SQL.option : NORMAL, DEFAULT, IGNORE_SQLEXCEPTION  (Also see PreRunSQLOption)
#
# ###########################################################
PRE-RUN.SQL.enabled = true
PRE-RUN.SQL.option.default = NORMAL
PRE-RUN.SQL[1].option[IGNORE_SQLEXCEPTION] = drop TABLE topgun.UNIT_TEST
PRE-RUN.SQL[2].option[DEFAULT] = create table topgun.UNIT_TEST (ITEM_NO INT, NAME VARCHAR(32), PRICE DOUBLE PRECISION)
PRE-RUN.SQL[3].option[DEFAULT] = insert into topgun.UNIT_TEST values (1, 'Mango', 2.50)
PRE-RUN.SQL[4].option[DEFAULT] = insert into topgun.UNIT_TEST values (2, 'Orange', 1.99)
PRE-RUN.SQL[5].option[DEFAULT] = insert into topgun.UNIT_TEST values (3, 'Banana', 1.56)


# ###########################################################
# STEP 3 : RUN the Java Application (we will be testing its outcome)
#
# Note:
# If TestRunner class is instantiated with an instance of TestRunnerAppBase
# then the instance will be run and RUN.javaclass is ignored. Such is the case
# when TestRunner is used in programmatic Unit Testing. 
#
# ###########################################################
RUN.javaclass.enabled = false
RUN.javaclass = au.com.topgun.SomeUnitTestClass
RUN.javaclass.config = not used


# ###########################################################
# STEP 4 : RUN OS CMD
#
# Runs Operation System commands
#
# ###########################################################
RUN.os.cmd.enabled = false
RUN.os.cmd[1] = dir 
RUN.os.cmd[2] = java -version


# ###########################################################
# STEP 5 : VERIFY outcome USING SQL
#
# resultset.options (Also see VerifyFileLineOption)
# MATCH_EXACT, MATCH_EXACT_IN_ORDER, MATCH_TOP_N_IN_ORDER, MATCH_ANY
#
# resultset[n] = column[expected value], column[expected value], ...
#               (specify only those columns you need)
#
# ###########################################################

VERIFY.SQL[1].enabled = true
VERIFY.SQL[1].select = \
    select * from topgun.UNIT_TEST \
    order by ITEM_NO asc
VERIFY.SQL[1].resultset.option = MATCH_EXACT_IN_ORDER
VERIFY.SQL[1].resultset[1] = ITEM_NO[1], NAME[Mango] , PRICE[2.5]
VERIFY.SQL[1].resultset[2] = ITEM_NO[2], NAME[Orange], PRICE[1.99]
VERIFY.SQL[1].resultset[3] = ITEM_NO[3], NAME[Banana], PRICE[1.56]

VERIFY.SQL[2].enabled = true
VERIFY.SQL[2].select = select * from topgun.UNIT_TEST order by ITEM_NO desc
VERIFY.SQL[2].resultset.option = MATCH_EXACT_IN_ORDER
VERIFY.SQL[2].resultset[1] = ITEM_NO[3], NAME[Banana], PRICE[1.56]
VERIFY.SQL[2].resultset[2] = ITEM_NO[2], NAME[Orange], PRICE[1.99]
VERIFY.SQL[2].resultset[3] = ITEM_NO[1], NAME[Mango] , PRICE[2.5]

VERIFY.SQL[3].enabled = true
VERIFY.SQL[3].select = select * from topgun.UNIT_TEST 
VERIFY.SQL[3].resultset.option = MATCH_EXACT
VERIFY.SQL[3].resultset[1] = ITEM_NO[1], NAME[Mango] , PRICE[2.5]
VERIFY.SQL[3].resultset[2] = ITEM_NO[2], NAME[Orange], PRICE[1.99]
VERIFY.SQL[3].resultset[3] = ITEM_NO[3], NAME[Banana], PRICE[1.56]

VERIFY.SQL[4].enabled = true
VERIFY.SQL[4].select = select * from topgun.UNIT_TEST order by ITEM_NO desc
VERIFY.SQL[4].resultset.option = MATCH_TOP_N_IN_ORDER
VERIFY.SQL[4].resultset[1] = ITEM_NO[3], NAME[Banana], PRICE[1.56]
VERIFY.SQL[4].resultset[2] = ITEM_NO[2], NAME[Orange], PRICE[1.99]

VERIFY.SQL[5].enabled = true
VERIFY.SQL[5].select = select * from topgun.UNIT_TEST
VERIFY.SQL[5].resultset.option = MATCH_ANY
VERIFY.SQL[5].resultset[1] = ITEM_NO[2], NAME[Orange], PRICE[1.99]
VERIFY.SQL[5].resultset[2] = ITEM_NO[3], NAME[Banana], PRICE[1.56]

VERIFY.SQL[6].enabled = true
VERIFY.SQL[6].select = select * from topgun.UNIT_TEST order by ITEM_NO desc
VERIFY.SQL[6].resultset.option = MATCH_EXACT
VERIFY.SQL[6].resultset[1] = ITEM_NO[1], NAME[Mango]
VERIFY.SQL[6].resultset[2] = NAME[Orange], PRICE[1.99]
VERIFY.SQL[6].resultset[3] = ITEM_NO[3], PRICE[1.56]


# ###########################################################
# STEP 6 : VERIFY outcome USING FILE
#
# line.option : DEFAULT, MATCH_EXACT, MATCH_USING_INDEX  (Also see VerifyFileLineOption)
#
# ###########################################################
VERIFY.file[1].enabled = true
VERIFY.file[1].path = ./src/test/resources/testdata/defaultTestRunnerOutcome.txt
VERIFY.file[1].line.option.default = MATCH_EXACT
VERIFY.file[1].line[1].option[DEFAULT] = This file is used to test TestRunner.java
VERIFY.file[1].line[2].option[DEFAULT] = I am using news headline for this test
VERIFY.file[1].line[3].option[MATCH_USING_INDEX] = 0[1)], 3[21/12/2015], 30[Apple's 'breathtaking decline']
VERIFY.file[1].line[4].option[MATCH_USING_INDEX] = 28[$150 million Opal card]


VERIFY.file[2].enabled = true
VERIFY.file[2].path = ./src/test/resources/testdata/defaultTestRunnerOutcome.txt
VERIFY.file[2].line.option.default = MATCH_USING_INDEX
VERIFY.file[2].line[1].option[MATCH_EXACT] = This file is used to test TestRunner.java
VERIFY.file[2].line[2].option[MATCH_EXACT] = I am using news headline for this test
VERIFY.file[2].line[3].option[DEFAULT] = 0[1)], 3[21/12/2015], 30[Apple's 'breathtaking decline']
VERIFY.file[2].line[4].option[DEFAULT] = 28[$150 million Opal card]


# ###########################################################
# STEP 7 : VERIFY outcome USING Java Application
# ###########################################################
VERIFY.javaclass.enabled = false
VERIFY.javaclass = au.com.topgun.unittest.TestRunner$VerifyFile
VERIFY.javaclass.config = not used
VERIFY.javaclass.parse.option = MATCH_EXACT | MATCH_INDEXED_FROM_0 
VERIFY.javaclass.line[1] = abcds12312312
VERIFY.javaclass.line[2] = 1[03], 2[abc]


# ###########################################################
# STEP 8 : CLEAN UP SQL
# ###########################################################
FINAL-CLEANUP.SQL.enabled = true
FINAL-CLEANUP.SQL.option.default = NORMAL
FINAL-CLEANUP.SQL[1].option[IGNORE_SQLEXCEPTION] = select * from topgun.UNIT_TEST
FINAL-CLEANUP.SQL[2].option[DEFAULT] = delete from topgun.UNIT_TEST where 1=1


# ###########################################################
# STEP 9 : FINAL-CLEANUP OS CMD
#
# Runs Operation System commands
#
# ###########################################################
FINAL-CLEANUP.os.cmd.enabled = false
FINAL-CLEANUP.os.cmd[1] = dir
FINAL-CLEANUP.os.cmd[2] = java -version


# ###########################################################
# STEP 10 : CLEAN UP using Java Class
# ###########################################################
FINAL-CLEANUP.javaclass.enabled = false
FINAL-CLEANUP.javaclass =
FINAL-CLEANUP.javaclass.config =
